// Generated by CoffeeScript 1.12.7
(function() {
  var NewRequest,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  NewRequest = (function() {
    function NewRequest() {
      this.load_spaces_preferences = bind(this.load_spaces_preferences, this);
      this.new_request = bind(this.new_request, this);
      $.ajaxSetup({
        cache: false
      });
      this.set_bindings();
      this.req_params = null;
      this.init();
    }

    NewRequest.prototype.init = function() {
      $.getJSON('/api/request/interval').always(function(data) {
        var i, interval, len, ref, results;
        if (data.status === 'OK' && (data != null ? data.data : void 0)) {
          ref = data.data || [];
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            interval = ref[i];
            results.push($('#time_interval').tmpl({
              id: interval.time_id,
              name: interval.time_name
            }).appendTo("#bloque"));
          }
          return results;
        }
      });
      $.getJSON('/api/request/type_request').always(function(data) {
        var i, len, ref, results, t_req;
        if (data.status === 'OK' && (data != null ? data.data : void 0)) {
          ref = data.data || [];
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            t_req = ref[i];
            results.push($('#req_type').tmpl({
              id: t_req.type_req_id,
              name: t_req.type_req_name
            }).appendTo("#tipo_solicitud"));
          }
          return results;
        }
      });
      return $.getJSON('/api/request/type_space').always(function(data) {
        var i, len, ref, results, t_spa;
        if (data.status === 'OK' && (data != null ? data.data : void 0)) {
          ref = data.data || [];
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            t_spa = ref[i];
            results.push($('#spa_type').tmpl({
              id: t_spa.type_spa_id,
              name: t_spa.type_spa_name
            }).appendTo("#tipo_espacio"));
          }
          return results;
        }
      });
    };

    NewRequest.prototype.set_bindings = function() {
      $('#filter').submit(this.load_spaces_preferences);
      $('#confirm_request').submit(this.new_request);
      return $(document).on('click', '.sel_space', (function(_this) {
        return function(e) {
          var _elem, elem, spa_id;
          e.preventDefault();
          elem = $(e.currentTarget).attr('id');
          _elem = elem.split('-');
          spa_id = "spa_id=" + _elem[1];
          return $.get('/api/request/options', spa_id, function(data) {
            var i, len, option, ref, results;
            if (data.status === 'OK' && data.data) {
              $('#conf_button').prop('disabled', false);
              $('.sel_space').prop('disabled', true);
              _this.req_params = _this.req_params + "&" + spa_id;
              ref = data.data || [];
              results = [];
              for (i = 0, len = ref.length; i < len; i++) {
                option = ref[i];
                results.push($('#options').tmpl({
                  name: option.opt_name,
                  id: option.opt_id
                }).appendTo("#opts"));
              }
              return results;
            }
          });
        };
      })(this));
    };

    NewRequest.prototype.new_request = function(e) {
      var opts;
      e.preventDefault();
      opts = $(e.currentTarget).serialize();
      this.req_params = this.req_params + "&" + opts;
      return $.post('/api/request', this.req_params, function(data) {
        if (data.status === 'OK' && (data.data != null)) {
          alert(data.data);
          return window.location.href = '/dashboard';
        } else {
          alert(data.data);
          return location.reload();
        }
      });
    };

    NewRequest.prototype.load_spaces_preferences = function(e) {
      var params;
      e.preventDefault();
      params = $(e.currentTarget).serialize();
      return $.get('/api/request/spaces', params, (function(_this) {
        return function(data) {
          var i, len, ref, space;
          if (data.status === 'OK' && data.data) {
            ref = data.data || [];
            for (i = 0, len = ref.length; i < len; i++) {
              space = ref[i];
              $('#spaces_disp').tmpl({
                id: space.spa_id,
                name: space.spa_name,
                description: space.spa_description,
                reference: space.spa_reference,
                capacity: space.spa_capacity
              }).appendTo(".spaces-results");
            }
            return _this.req_params = params;
          } else {
            return console.log(data.message);
          }
        };
      })(this));
    };

    return NewRequest;

  })();

  window.NewRequest = NewRequest;

}).call(this);
